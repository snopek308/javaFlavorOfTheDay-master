<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Data source and connection pool bean -->
    <!-- C3P0 library provides connection pool -->
    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">

        <!-- JDBC Database connection settings -->
        <property name="driverClass" value="org.apache.derby.jdbc.EmbeddedDriver"/>
        <property name="jdbcUrl" value="jdbc:derby:#{ servletContext.getRealPath('/') }/../../../db"/>
        <property name="user" value="donut_reviews"/>
        <property name="password" value="stacy"/>

        <!-- these are connection pool properties for C3P0 -->
        <property name="initialPoolSize" value="5"/>
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="20" />
        <property name="maxIdleTime" value="30000" />
    </bean>

    <!-- Hibernate session factory bean -->
    <bean id="SessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="packagesToScan" value="hibernate.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.DerbyTenSevenDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- Hibernate's transaction manager -->
    <bean id="myTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="SessionFactory"/>
    </bean>

    <!-- Enable transactional annotations -->
    <tx:annotation-driven transaction-manager="myTransactionManager"/>


    //turn on component scanning to pick on applications
    <!--<context:property-placeholder location="classpath:newsletter.properties"/>
    <mvc: annotation-driven="" />
    -->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean class="springxml.services.emailValidation" id="emailValidation"></bean>
    <bean class="springxml.services.firstNameValidation" id="firstNameValidation"></bean>
    <bean class="springxml.services.lastNameValidation" id="lastNameValidation"></bean>

    <bean class="springxml.beans.user" id="user">
        <constructor-arg ref="emailValidation"></constructor-arg>
        <property name="email" value="${n1.email}"></property>
        <property name="firstName" value="${n1.firstName}"></property>
        <property name="lastName" value="${n1.lastName}"></property>


    </bean>
    <!-- Support for conversion, formatting, and validation -->
    <mvc:annotation-driven conversion-service="myConversionService"/>

    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"></mvc:resources>
</beans>